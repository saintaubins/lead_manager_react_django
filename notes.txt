pip install pipenv

pipenv shell

pipenv install django djangorestframework django-rest-knox

django-admin startproject leadmanager

cd leadmanager

python manage.py startapp leads

go to settings.py installed apps, insert: 'leads', 'rest_framework', 

go make a model in leads api, in class form

we need to now make a migration, python manage.py makemigrations, python manage.py migrate.

go into leads api, create serilizers.py and inster the Serializer class.

now make an api file in the leads api, called api.py

next we will create the urls, start with the root url.

then create a leads, url.py

we should now have a basic crud api, we can run the server.

after debug we can test it out with postman.

*****************************************************************

Now creating a react app from scratch not using npx.

Go to root directory of this folder.

we will need access to manage.py, so go into lead manager.

python manage.py startapp frontend

mkdir -p ./frontend/src/components

mkdir -p ./frontend/{static,templates}/frontend

cd ..

npm init -y

npm i -D webpack webpack-cli

npm i -D @babel/core babel-loader @babel/preset-env @babel/preset-react babel-plugin-transform-class-properties

npm i react react-dom prop-types

touch .babelrc, see file for the code

touch webpack.config.js, see file for the code

next go to package.json and make the scripts, see scripts section for the code.

next we will create index.js.

go to src folder and create index.js.

in components, create a file caled App.js, see App.js for the code.

next go templates/frontend, create a file called index.html

next go to bootswatch.com, go to download in cosmo, and grab http link

https://bootswatch.com/4/cosmo/bootstrap.min.css , and put that in index.html 

then go to gettbootstrap.com -> get started -> go to js section, and grab the script link, 
to get the js file, 

then go to settings.py and register frontend in installed apps. 

then go to frontend/views.py see file for code.

then create in frontend/urls.py see file for code.

then in lead manager urls.py add the just created url. 

after any debugging we should be all set, we added navbar, and a few react components.

**************************************************************************************

setting up redux. note npm server in off

npm i redux react-redux redux-thunk redux-devtools-extension

npm run dev

go to leadmanager/frontend/src -> create store.js see file for code

in src create a folder called reducers, and a file within called index.js see file for code.

then go to App.js in components, we want to import store, and Provider from reaxt-redux, and wrap the app
with a Provider.

next go back to rootreducer reducers in index.js and import leads, and export leads
then go into reducers and create a file called leads.js

follow flow to create actions, types.js etc.

in actions folder create a leads.js

before we continue, stop server and install axios.

npm i axios, now restart server

now to call the component, go to components/leads/Leads.js is where we call this from.

everything should be working, after adding html to Leads.js,

now to give functionality to the delete button, got to actions leads.js

create and import the delete method, then go to types file, and create as well.

then go to leads reducer, and create delete there. once that is completed, we need to go to Leads.js

and import deletelead, and add the functionality for the UI, don't forget to export delete lead as well.

test everything should work.

**********************************************************************************************
 
 now to add work to the lead from.

go to components/leads/Form.js 

follow through until all errors are gone

********************************************************************************************








